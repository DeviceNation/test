Java.perform(function () {
    var CameraManager = Java.use('android.hardware.camera2.CameraManager');
    CameraManager.openCamera.overload('java.lang.String', 'android.hardware.camera2.CameraDevice$StateCallback', 'android.os.Handler').implementation = function (cameraId, callback, handler) {
        console.log('Camera2 API: openCamera() called with cameraId: ' + cameraId);
        return this.openCamera(cameraId, callback, handler);
    };

    var CameraDevice = Java.use('android.hardware.camera2.CameraDevice');
    CameraDevice.createCaptureSession.overload('java.util.List', 'android.hardware.camera2.CameraCaptureSession$StateCallback', 'android.os.Handler').implementation = function (outputs, callback, handler) {
        console.log('Camera2 API: createCaptureSession() called');
        return this.createCaptureSession(outputs, callback, handler);
    };

    var CaptureRequestBuilder = Java.use('android.hardware.camera2.CaptureRequest$Builder');
    CaptureRequestBuilder.build.implementation = function () {
        console.log('Camera2 API: CaptureRequest build() called');
        return this.build();
    };

    var ImageReader = Java.use('android.media.ImageReader');
    ImageReader.setOnImageAvailableListener.implementation = function (listener, handler) {
        console.log('ImageReader: setOnImageAvailableListener() called');
        return this.setOnImageAvailableListener(listener, handler);
    };
});