Java.perform(function () {
    var Camera = Java.use('android.hardware.Camera');

    // Hook the setPreviewCallback method to inject our custom callback
    Camera.setPreviewCallback.implementation = function (callback) {
        var PreviewCallback = Java.use('android.hardware.Camera$PreviewCallback');
        var CustomCallback = PreviewCallback.$new({
            onPreviewFrame: function (data, camera) {
                console.log('Preview frame received - ready to inject custom image');

                // Manipulate the preview frame data here
                if (data !== null) {
                    var customImage = createCustomPreviewData(data.length);
                    data.overwrite(0, customImage, 0, data.length);

                    console.log('Custom image injected into preview');
                }

                // Call the original callback method
                callback.onPreviewFrame(data, camera);
            }
        });

        // Set the custom callback instead of the original
        this.setPreviewCallback(CustomCallback);
    };

    // Function to create a custom preview frame data
    function createCustomPreviewData(size) {
        var byteArray = Java.array('byte', Array(size).fill(0)); // Fill with example data; modify as needed
        for (var i = 0; i < size; i++) {
            byteArray[i] = (i % 256); // Simple greyscale gradient; replace with actual image data
        }
        return byteArray;
    }
});