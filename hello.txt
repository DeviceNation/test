Java.perform(function () {
    // Hook methods from the older Camera API
    var Camera = Java.use('android.hardware.Camera');
    Camera.open.overload().implementation = function () {
        console.log('Old Camera API used: Camera.open()');
        return this.open.apply(this, arguments);
    };
    Camera.open.overload('int').implementation = function (cameraId) {
        console.log('Old Camera API used: Camera.open(int)');
        return this.open.apply(this, arguments);
    };

    // Hook methods from the newer Camera2 API
    var CameraManager = Java.use('android.hardware.camera2.CameraManager');
    CameraManager.openCamera.overload('java.lang.String', 'android.hardware.camera2.CameraDevice$StateCallback', 'android.os.Handler').implementation = function (cameraId, callback, handler) {
        console.log('Camera2 API used: CameraManager.openCamera()');
        return this.openCamera.apply(this, arguments);
    };

    // Hook methods for accessing camera characteristics (common in Camera2 API)
    CameraManager.getCameraCharacteristics.overload('java.lang.String').implementation = function (cameraId) {
        console.log('Camera2 API used: CameraManager.getCameraCharacteristics()');
        return this.getCameraCharacteristics.apply(this, arguments);
    };
});