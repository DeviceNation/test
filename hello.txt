#!/bin/bash

# Check if correct number of arguments are passed
if [ "$#" -ne 2 ]; then
    echo "Usage: $0 <source_folder> <destination_folder>"
    exit 1
fi

# Assign arguments to variables
source_folder=$1
destination_folder=$2

# Check if the source folder exists
if [ ! -d "$source_folder" ]; then
    echo "Source folder $source_folder does not exist."
    exit 1
fi

# Create the destination folder if it doesn't exist (including any necessary parent directories)
mkdir -p "$destination_folder"

# Move the folder
mv "$source_folder" "$destination_folder"

# Check if the move was successful
if [ $? -eq 0 ]; then
    echo "Folder moved successfully from $source_folder to $destination_folder."
else
    echo "Failed to move the folder."
    exit 1
fi




#!/bin/bash

# Check if correct number of arguments are passed
if [ "$#" -ne 3 ]; then
    echo "Usage: $0 <url_of_zip_file> <command1> <command2>"
    exit 1
fi

# Assign arguments to variables
zip_url=$1
command1=$2
command2=$3

# Define a temporary directory for downloading the ZIP file
temp_dir=$(mktemp -d)

# Download the ZIP file
zip_file="$temp_dir/file.zip"
echo "Downloading $zip_url..."
curl -L -o "$zip_file" "$zip_url"

# Check if the download was successful
if [ $? -ne 0 ]; then
    echo "Failed to download the ZIP file."
    exit 1
fi

# Unzip the file
echo "Unzipping the file..."
unzip "$zip_file" -d "$temp_dir"

# Check if the unzip was successful
if [ $? -ne 0 ]; then
    echo "Failed to unzip the file."
    exit 1
fi

# Run the specified commands on each extracted folder
for folder in "$temp_dir"/*/; do
    if [ -d "$folder" ]; then
        echo "Running commands on $folder..."
        (cd "$folder" && eval "$command1" && eval "$command2")
    fi
done

# Clean up
rm -rf "$temp_dir"

echo "Done."
